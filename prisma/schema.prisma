// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output= "../prisma/generated/type-graphql"
  emitTranspiledCode= true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Producto{
  id      String @id @default(cuid())
  nombre  String
  foto    String
  inventario Inventario?
}

model Inventario{
  id                    String @id @default(cuid())
  cantidad              Int
  producto              Producto @relation(fields: [productoId], references: [id])
  productoId            String @unique
  movimientoInventario  MovimientoInventario[]

}


enum Enum_TipoMovimiento{
  Entrada
  Salida
}


model MovimientoInventario{
  id              String        @id @default(cuid())
  inventario      Inventario    @relation(fields: [inventarioId], references: [id])
  inventarioId    String
  cantidad        Int
  tipoMovimiento  Enum_TipoMovimiento
  fecha           DateTime
  usuario         User?      @relation(fields: [usuarioId], references: [id])
  usuarioId       String?

}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}



model User{
  id            String   @id @default(cuid())
  name          String?
  email         String ?  @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  movimientos   MovimientoInventario[]
}