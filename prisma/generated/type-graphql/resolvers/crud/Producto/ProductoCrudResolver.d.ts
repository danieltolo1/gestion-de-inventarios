import { GraphQLResolveInfo } from "graphql";
import { AggregateProductoArgs } from "./args/AggregateProductoArgs";
import { CreateManyProductoArgs } from "./args/CreateManyProductoArgs";
import { CreateProductoArgs } from "./args/CreateProductoArgs";
import { DeleteManyProductoArgs } from "./args/DeleteManyProductoArgs";
import { DeleteProductoArgs } from "./args/DeleteProductoArgs";
import { FindFirstProductoArgs } from "./args/FindFirstProductoArgs";
import { FindManyProductoArgs } from "./args/FindManyProductoArgs";
import { FindUniqueProductoArgs } from "./args/FindUniqueProductoArgs";
import { GroupByProductoArgs } from "./args/GroupByProductoArgs";
import { UpdateManyProductoArgs } from "./args/UpdateManyProductoArgs";
import { UpdateProductoArgs } from "./args/UpdateProductoArgs";
import { UpsertProductoArgs } from "./args/UpsertProductoArgs";
import { Producto } from "../../../models/Producto";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregateProducto } from "../../outputs/AggregateProducto";
import { ProductoGroupBy } from "../../outputs/ProductoGroupBy";
export declare class ProductoCrudResolver {
    producto(ctx: any, info: GraphQLResolveInfo, args: FindUniqueProductoArgs): Promise<Producto | null>;
    findFirstProducto(ctx: any, info: GraphQLResolveInfo, args: FindFirstProductoArgs): Promise<Producto | null>;
    productos(ctx: any, info: GraphQLResolveInfo, args: FindManyProductoArgs): Promise<Producto[]>;
    createProducto(ctx: any, info: GraphQLResolveInfo, args: CreateProductoArgs): Promise<Producto>;
    createManyProducto(ctx: any, info: GraphQLResolveInfo, args: CreateManyProductoArgs): Promise<AffectedRowsOutput>;
    deleteProducto(ctx: any, info: GraphQLResolveInfo, args: DeleteProductoArgs): Promise<Producto | null>;
    updateProducto(ctx: any, info: GraphQLResolveInfo, args: UpdateProductoArgs): Promise<Producto | null>;
    deleteManyProducto(ctx: any, info: GraphQLResolveInfo, args: DeleteManyProductoArgs): Promise<AffectedRowsOutput>;
    updateManyProducto(ctx: any, info: GraphQLResolveInfo, args: UpdateManyProductoArgs): Promise<AffectedRowsOutput>;
    upsertProducto(ctx: any, info: GraphQLResolveInfo, args: UpsertProductoArgs): Promise<Producto>;
    aggregateProducto(ctx: any, info: GraphQLResolveInfo, args: AggregateProductoArgs): Promise<AggregateProducto>;
    groupByProducto(ctx: any, info: GraphQLResolveInfo, args: GroupByProductoArgs): Promise<ProductoGroupBy[]>;
}
